#!/usr/bin/env python3
import re
import sys
import time
import socket
from json import loads
from urllib.request import urlopen
from urllib.error import HTTPError


TEMPLATE = '{ip:15s} -> {country} / {region} / {city}'
ERR_TEMPLATE = '{ip:15s} -> {msg}'


def print_err(host, msg):
    '''打印错误信息'''
    err_info = ERR_TEMPLATE.format(ip=host, msg=msg)
    print('\033[91m%s\033[0m' % err_info)


class retry(object):
    def __init__(self, max_retries=3, wait=0, exceptions=(Exception,)):
        self.max_retries = max_retries
        self.exceptions = exceptions
        self.wait = wait

    def __call__(self, func):
        def wrapper(*args, **kwargs):
            for n in range(self.max_retries + 1):
                try:
                    result = func(*args, **kwargs)
                except self.exceptions as e:
                    if n < self.max_retries:
                        time.sleep(self.wait)
                        continue
                    else:
                        print_err(args[0], e)
                else:
                    return result
        return wrapper


def is_ip(addr):
    '''检查是否时 IP 地址'''
    IP_PATTERN = (r'^(2(5[0-5]|[0-4]\d)|1\d\d|[1-9]\d|\d)'
                  '(\.(2(5[0-5]|[0-4]\d)|1\d\d|[1-9]\d|\d)){3}$')
    return True if re.match(IP_PATTERN, addr) else False


def dns(host):
    '''获取 IP 地址'''
    try:
        for family, *_, addr in socket.getaddrinfo(host, None):
            if family == socket.AF_INET:
                return addr[0]
    except socket.error as e:
        print_err(host, e)


@retry(3, 1.5, (HTTPError,))
def chk_ip(ip):
    '''检查 IP'''
    url = 'http://ip.taobao.com/service/getIpInfo2.php?ip=%s' % ip
    resp = urlopen(url)
    if resp.status == 200:
        data = resp.read()
        ip_info = loads(data)
        print(TEMPLATE.format(**ip_info['data']))
    else:
        msg = 'http status is %s' % resp.status
        print_err(ip, msg)


if __name__ == '__main__':
    if len(sys.argv) > 1:
        for ip in sys.argv[1:]:
            if not is_ip(ip):
                ip = dns(ip)
                if ip is None:
                    continue
            chk_ip(ip)
    else:
        print('usage: chkip IP1 [IP2 IP3 ...]')
        sys.exit(1)
